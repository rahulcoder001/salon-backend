generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(uuid())
  fullname    String
  email       String  @unique
  contact     String
  password    String
  profile_img String?
  salonId     String? // changed to String
  step        Int?
  salon       Salon?  @relation(fields: [salonId], references: [id])
  staff       Staff[]
}

model Staff {
  id          String  @id @default(uuid())
  fullname    String
  email       String  @unique
  contact     String  @unique
  password    String
  profile_img String?
  user_id     String
  branch_id   String
  staff_id    String  @unique

  user    User     @relation(fields: [user_id], references: [id])
  branch  Branch   @relation(fields: [branch_id], references: [id])
  clients Client[]
}

model Salon {
  id             String  @id @default(uuid())
  salon_name     String
  salon_tag      String
  opening_time   String?
  contact_email  String
  contact_number String
  branch_url     String?
  salon_img_url  String?

  branches Branch[]
  users    User[]
}

model Branch {
  id              String      @id @default(uuid())
  branch_name     String
  branch_location String
  salon_id        String
  contact_email   String
  contact_number  String
  opning_time     String
  closeings_time  String
  salon           Salon       @relation(fields: [salon_id], references: [id])
  staff           Staff[]
  inventory       Inventory[]
  clients         Client[]
  service         Service[]
}

model Inventory {
  id               String @id @default(uuid())
  product_name     String
  product_quantity Int
  price            Int
  branch_id        String

  branch Branch @relation(fields: [branch_id], references: [id])
}

model Service {
  id               String @id @default(uuid())
  service_name     String
  service_price   Int
  time            Int
  branch_id        String
  branch Branch @relation(fields: [branch_id], references: [id])
}

model Client {
  id          String  @id @default(uuid())
  client_name String
  email       String
  contact     String
  branch_id   String
  staff_id    String?

  branch Branch @relation(fields: [branch_id], references: [id])
  staff  Staff? @relation(fields: [staff_id], references: [id])
}
